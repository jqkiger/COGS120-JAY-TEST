{"version":3,"sources":["withRoot.js","Components/AppBar.js","pages/index.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","blue","main","dark","secondary","lightGreen","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","CssBaseline_default","ButtonAppBar","state","isDrawerOpen","isNotificationsDrawerOpen","toggleDrawer","side","open","_this","setState","Object","defineProperty","handleFriendsClick","handleClickProfile","profileOpen","handleClickFriends","friendsOpen","handleCloseProfile","handleCloseFriends","_this2","this","classes","sideList","className","list","List_default","ListItem_default","button","onClick","ListItemIcon_default","AccountCircle_default","ListItemText_default","Group_default","map","text","index","key","root","AppBar_default","position","Toolbar_default","Button_default","menuButton","color","aria-label","Menu_default","Drawer_default","anchor","left","onClose","tabIndex","role","onKeyDown","Dialog_default","aria-labelledby","DialogTitle_default","id","Typography_default","variant","grow","React","withStyles","flexGrow","marginLeft","marginRight","width","inputProps","step","options","Index","handleClose","handleClick","handleEntering","radioGroupRef","focus","handleCancel","pageTwoOpen","confirmationOpen","handleOk","handleChange","event","value","handleClickDescription","descriptionOpen","handleCloseDescription","handleClickPay","payOpen","handleClosePay","handleClickRemind","remindOpen","handleCloseRemind","handleConfirmation","handleCloseConfirmation","_this$props","objectWithoutProperties","_this$state","DialogActions_default","top","Components_AppBar","dense","Avatar_default","alt","src","concat","ListItemSecondaryAction_default","fab","Add_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","type","fullWidth","RadioGroup_default","ref","name","onChange","option","FormControlLabel_default","control","Radio_default","bottom","spacing","unit","right","textAlign","paddingTop","Boolean","window","location","hostname","match","ReactDOM","render","pages","document","getElementById"],"mappings":"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","file":"static/js/main.b3bfc748.chunk.js","sourcesContent":["import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport lightGreen from '@material-ui/core/colors/lightGreen';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: blue[300],\n      main: blue[500],\n      dark: blue[700],\n    },\n    secondary: {\n      light: lightGreen[300],\n      main: lightGreen[500],\n      dark: lightGreen[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Drawer from '@material-ui/core/Drawer';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Group from '@material-ui/icons/Group';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  list:{\n    width: 250,\n  }\n};\n\n\n\nclass ButtonAppBar extends React.Component {\n  state = { \n    isDrawerOpen: false,\n    isNotificationsDrawerOpen: false,\n  };\n\n  toggleDrawer = (side, open)=>()=>{\n    this.setState({\n      [side]: open\n    });\n  };\n\n  handleFriendsClick = () => {\n    \n  };\n\n    handleClickProfile=()=>{\n      this.setState({profileOpen: true,});\n    };\n    \n    handleClickFriends=()=>{\n      this.setState({friendsOpen: true,});\n    };\n\n    handleCloseProfile=()=>{\n      this.setState({profileOpen: false,});\n    };\n\n    handleCloseFriends=()=>{\n      this.setState({friendsOpen: false,});\n    };\n\n  render(){\n    const{classes} = this.props;\n    const{profileOpen} = this.state;\n    const{friendsOpen} = this.state;\n\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <ListItem button onClick={() => this.handleClickProfile()}>\n            <ListItemIcon><AccountCircle/></ListItemIcon>\n            <ListItemText primary=\"Profile\"/>\n          </ListItem>\n\n          <ListItem button onClick={() => this.handleClickFriends()}>\n            <ListItemIcon><Group/></ListItemIcon>\n            <ListItemText primary=\"Friends\"/>\n          </ListItem>\n          \n        </List>\n      </div>\n    );\n\n    const AlertList = (\n     <div className={classes.list}>\n        <List>\n          {['You owe Friend1 Money', 'Friend2 owes you money'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 ===0 ? <Group/>:<Group/>}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n\n            <Button \n              className={classes.menuButton} \n              color=\"inherit\" \n              aria-label=\"Open drawer\"\n              onClick={this.toggleDrawer('left', true)}\n              >\n              <MenuIcon />\n            </Button>\n\n            <Drawer anchor=\"left\" open={this.state.left} onClose={this.toggleDrawer('left', false)}>\n              <div\n                tabIndex={0}\n                role=\"button\"\n                onClick={this.toggleDrawer('left', false)}\n                onKeyDown={this.toggleDrawer('left', false)}\n              >\n                {sideList}\n              </div>\n            </Drawer>\n\n            <div>\n              <Dialog\n                      open={this.state.profileOpen}\n                      onClose={this.handleCloseProfile}\n                      aria-labelledby=\"profile-dialog\"\n                    >\n                      <DialogTitle id=\"profile-dialog\">Profile Page</DialogTitle>\n              </Dialog>\n              <Dialog\n                      open={this.state.friendsOpen}\n                      onClose={this.handleCloseFriends}\n                      aria-labelledby=\"friend-dialog\"\n                    >\n                      <DialogTitle id=\"friend-dialog\">Friend/Social Page</DialogTitle>\n              </Dialog>\n            </div>\n\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Splitmo\n            </Typography>\n            {/*<IconButton color=\"inherit\">\n              <Badge badgeContent={2} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>*/}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  };\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport AddAPhoto from '@material-ui/icons/AddAPhoto';\nimport AddIcon from '@material-ui/icons/Add';\nimport withRoot from '../withRoot';\nimport AppBar from '../Components/AppBar.js'\n\nconst styles = theme => ({\n  fab: {\n    margin: 0,\n    top: 'auto',\n    left: 'auto',\n    bottom: theme.spacing.unit*2,\n    right: theme.spacing.unit*2,\n    position: 'fixed',\n  },\n  top:{\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit*0,\n  },\n});\n\nconst inputProps = {\n  step: 0.01,\n};\n\nconst options = [\n  'Food',\n  'Recreation',\n  'Shopping',\n  'Bills',\n];\n\nclass Index extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  handleClick = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  handleCancel = () => {\n    this.setState({open:false, pageTwoOpen:false, confirmationOpen:false});\n  };\n\n  handleOk = () => {\n    this.setState({open: false, pageTwoOpen: true});\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleClickDescription = () => {\n    this.setState({descriptionOpen: true,});\n  };\n\n  handleCloseDescription = () =>{\n    this.setState({descriptionOpen: false,});\n  };\n\n  handleClickPay = () => {\n    this.setState({payOpen: true,});\n  };\n\n  handleClosePay = () => {\n    this.setState({payOpen: false,});\n  };\n\n  handleClickRemind = () => {\n    this.setState({remindOpen: true,});\n  };\n\n  handleCloseRemind = () => {\n    this.setState({remindOpen: false,});\n  };\n\n  handleConfirmation=()=>{\n    this.setState({confirmationOpen: true, pageTwoOpen:false})\n  };\n\n  handleCloseConfirmation = () => {\n    this.setState({confirmationOpen: false,});\n  };\n\n  render() {\n    const { value, ...other } = this.props;\n    const { classes } = this.props;\n    const { open, descriptionOpen, payOpen, remindOpen, pageTwoOpen, confirmationOpen } = this.state;\n    \n    return (\n      <div>\n\n          <Dialog\n                  open={this.state.pageTwoOpen}\n                  onClose={this.handleCancel}\n                  aria-labelledby=\"add-people-dialog\"\n                >\n                  <DialogTitle id=\"add-people-dialog\">Add people to split activity Page</DialogTitle>\n                  <DialogActions>\n                    <Button onClick={this.handleCancel} color=\"primary\">\n                      Cancel\n                    </Button>\n                    <Button onClick={this.handleConfirmation} color=\"primary\">\n                      Next\n                    </Button>\n                  </DialogActions>\n          </Dialog>\n\n          <Dialog\n                  open={this.state.confirmationOpen}\n                  onClose={this.handleCancel}\n                  aria-labelledby=\"confirmation-dialog\"\n                >\n                  <DialogTitle id=\"confirmation-dialog\">Confirmation split activity Page</DialogTitle>\n                  <DialogActions>\n                    <Button onClick={this.handleCancel} color=\"primary\">\n                      Cancel\n                    </Button>\n                    <Button onClick={this.handleCancel} color=\"primary\">\n                      Confirm\n                    </Button>\n                  </DialogActions>\n          </Dialog>\n\n          <Dialog\n                  open={this.state.descriptionOpen}\n                  onClose={this.handleCloseDescription}\n                  aria-labelledby=\"description-dialog\"\n                >\n                  <DialogTitle id=\"description-dialog\">Split Activity Description Page</DialogTitle>\n          </Dialog>\n          <Dialog\n                  open={this.state.payOpen}\n                  onClose={this.handleClosePay}\n                  aria-labelledby=\"pay-dialog\"\n                >\n                  <DialogTitle id=\"pay-dialog\">Payment Confirmation Page</DialogTitle>\n          </Dialog>\n\n          <Dialog\n                  open={this.state.remindOpen}\n                  onClose={this.handleCloseRemind}\n                  aria-labelledby=\"remind-dialog\"\n                >\n                  <DialogTitle id=\"remind-dialog\">Methods to remind Page</DialogTitle>\n          </Dialog>\n\n          <div className={classes.top}>\n          <AppBar/>\n          <List>\n          {[0, 1, 2, 3, 4, 5, 6].map(value => (\n            <ListItem key={value} dense button onClick={() => this.handleClickDescription()}>\n              <Avatar alt=\"Remy Sharp\" src=\"http://multisim-insigneo.org/wp-content/uploads/2015/02/blank-profile-picture-300x300.png\" />\n              <ListItemText primary={`Split Activity ${value + 1}`} />\n              <ListItemSecondaryAction>\n                <Button variant=\"contained\" color ={value %4 ===0 ? 'error':'secondary'} aria-label=\"pay\" \n                onClick={() => (value %4 ===0 ? this.handleClickRemind():this.handleClickPay())}>\n                {value %4 ===0 ? 'Remind':'Pay'}\n                </Button>\n              </ListItemSecondaryAction>\n\n            </ListItem>\n          ))}\n        </List>\n          </div>\n\n          <div className={classes.fab}>\n            <Button variant=\"fab\" color=\"primary\" aria-label=\"Add\" onClick={this.handleClick}>\n              <AddIcon/>\n            </Button>\n          </div>\n          <div>\n            <Dialog\n              open={this.state.open}\n              onClose={this.handleClose}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">Create Split Activity</DialogTitle>\n              <DialogContent>\n                <DialogContentText>\n                  To split a purchase please enter a description, the total cost, and the number of people involved.\n                </DialogContentText>\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"standard-required\"\n                  label=\"Description of purchase\"\n                  type=\"text\"\n                  fullWidth\n                />\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"standard-required\"\n                  label=\"Total Cost\"\n                  type=\"number\"\n                  inputProps={inputProps}\n                  fullWidth\n                />\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"standard-required\"\n                  label=\"Total people\"\n                  type=\"number\"\n                  fullWidth\n                />\n              </DialogContent>\n              <DialogTitle id=\"confirmation-dialog-title\">Activity Type</DialogTitle>\n                <DialogContent>\n                  <RadioGroup\n                    ref={ref => {\n                      this.radioGroupRef = ref;\n                    }}\n                    aria-label=\"Ringtone\"\n                    name=\"ringtone\"\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                  >\n                    {options.map(option => (\n                      <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n                    ))}\n                  </RadioGroup>\n                  <Button onClick={this.handleClose} color=\"primary\">                   \n                    Add a picture of receipt\n                  </Button>\n                </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleClose} color=\"primary\">\n                  Cancel\n                </Button>\n                <Button onClick={this.handleOk} color=\"primary\">\n                  Next\n                </Button>\n              </DialogActions>\n            </Dialog>\n          </div>\n      </div>\n    );\n  }\n}\n\nIndex.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(Index));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './pages/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}